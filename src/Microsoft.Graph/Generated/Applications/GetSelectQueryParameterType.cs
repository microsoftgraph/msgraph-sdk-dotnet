// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Microsoft.Graph.Applications {
    /// <summary>Provides operations to manage the collection of application entities.</summary>
    public enum GetSelectQueryParameterType {
        [EnumMember(Value = "id")]
        Id,
        [EnumMember(Value = "deletedDateTime")]
        DeletedDateTime,
        [EnumMember(Value = "addIns")]
        AddIns,
        [EnumMember(Value = "api")]
        Api,
        [EnumMember(Value = "appId")]
        AppId,
        [EnumMember(Value = "applicationTemplateId")]
        ApplicationTemplateId,
        [EnumMember(Value = "appRoles")]
        AppRoles,
        [EnumMember(Value = "certification")]
        Certification,
        [EnumMember(Value = "createdDateTime")]
        CreatedDateTime,
        [EnumMember(Value = "defaultRedirectUri")]
        DefaultRedirectUri,
        [EnumMember(Value = "description")]
        Description,
        [EnumMember(Value = "disabledByMicrosoftStatus")]
        DisabledByMicrosoftStatus,
        [EnumMember(Value = "displayName")]
        DisplayName,
        [EnumMember(Value = "groupMembershipClaims")]
        GroupMembershipClaims,
        [EnumMember(Value = "identifierUris")]
        IdentifierUris,
        [EnumMember(Value = "info")]
        Info,
        [EnumMember(Value = "isDeviceOnlyAuthSupported")]
        IsDeviceOnlyAuthSupported,
        [EnumMember(Value = "isFallbackPublicClient")]
        IsFallbackPublicClient,
        [EnumMember(Value = "keyCredentials")]
        KeyCredentials,
        [EnumMember(Value = "logo")]
        Logo,
        [EnumMember(Value = "notes")]
        Notes,
        [EnumMember(Value = "oauth2RequirePostResponse")]
        Oauth2RequirePostResponse,
        [EnumMember(Value = "optionalClaims")]
        OptionalClaims,
        [EnumMember(Value = "parentalControlSettings")]
        ParentalControlSettings,
        [EnumMember(Value = "passwordCredentials")]
        PasswordCredentials,
        [EnumMember(Value = "publicClient")]
        PublicClient,
        [EnumMember(Value = "publisherDomain")]
        PublisherDomain,
        [EnumMember(Value = "requestSignatureVerification")]
        RequestSignatureVerification,
        [EnumMember(Value = "requiredResourceAccess")]
        RequiredResourceAccess,
        [EnumMember(Value = "samlMetadataUrl")]
        SamlMetadataUrl,
        [EnumMember(Value = "serviceManagementReference")]
        ServiceManagementReference,
        [EnumMember(Value = "servicePrincipalLockConfiguration")]
        ServicePrincipalLockConfiguration,
        [EnumMember(Value = "signInAudience")]
        SignInAudience,
        [EnumMember(Value = "spa")]
        Spa,
        [EnumMember(Value = "tags")]
        Tags,
        [EnumMember(Value = "tokenEncryptionKeyId")]
        TokenEncryptionKeyId,
        [EnumMember(Value = "uniqueName")]
        UniqueName,
        [EnumMember(Value = "verifiedPublisher")]
        VerifiedPublisher,
        [EnumMember(Value = "web")]
        Web,
        [EnumMember(Value = "appManagementPolicies")]
        AppManagementPolicies,
        [EnumMember(Value = "createdOnBehalfOf")]
        CreatedOnBehalfOf,
        [EnumMember(Value = "extensionProperties")]
        ExtensionProperties,
        [EnumMember(Value = "federatedIdentityCredentials")]
        FederatedIdentityCredentials,
        [EnumMember(Value = "homeRealmDiscoveryPolicies")]
        HomeRealmDiscoveryPolicies,
        [EnumMember(Value = "owners")]
        Owners,
        [EnumMember(Value = "synchronization")]
        Synchronization,
        [EnumMember(Value = "tokenIssuancePolicies")]
        TokenIssuancePolicies,
        [EnumMember(Value = "tokenLifetimePolicies")]
        TokenLifetimePolicies,
    }
}
