// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class IdentityContainer : global::Microsoft.Graph.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Represents entry point for API connectors.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.IdentityApiConnector>? ApiConnectors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityApiConnector>?>("apiConnectors"); }
            set { BackingStore?.Set("apiConnectors", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.IdentityApiConnector> ApiConnectors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityApiConnector>>("apiConnectors"); }
            set { BackingStore?.Set("apiConnectors", value); }
        }
#endif
        /// <summary>Represents listeners for custom authentication extension events in Azure AD for workforce and customers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.AuthenticationEventListener>? AuthenticationEventListeners
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.AuthenticationEventListener>?>("authenticationEventListeners"); }
            set { BackingStore?.Set("authenticationEventListeners", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.AuthenticationEventListener> AuthenticationEventListeners
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.AuthenticationEventListener>>("authenticationEventListeners"); }
            set { BackingStore?.Set("authenticationEventListeners", value); }
        }
#endif
        /// <summary>Represents the entry point for self-service sign-up and sign-in user flows in both Microsoft Entra workforce and external tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.AuthenticationEventsFlow>? AuthenticationEventsFlows
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.AuthenticationEventsFlow>?>("authenticationEventsFlows"); }
            set { BackingStore?.Set("authenticationEventsFlows", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.AuthenticationEventsFlow> AuthenticationEventsFlows
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.AuthenticationEventsFlow>>("authenticationEventsFlows"); }
            set { BackingStore?.Set("authenticationEventsFlows", value); }
        }
#endif
        /// <summary>Represents entry point for B2X/self-service sign-up identity userflows.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.B2xIdentityUserFlow>? B2xUserFlows
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.B2xIdentityUserFlow>?>("b2xUserFlows"); }
            set { BackingStore?.Set("b2xUserFlows", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.B2xIdentityUserFlow> B2xUserFlows
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.B2xIdentityUserFlow>>("b2xUserFlows"); }
            set { BackingStore?.Set("b2xUserFlows", value); }
        }
#endif
        /// <summary>the entry point for the Conditional Access (CA) object model.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Models.ConditionalAccessRoot? ConditionalAccess
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Models.ConditionalAccessRoot?>("conditionalAccess"); }
            set { BackingStore?.Set("conditionalAccess", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Models.ConditionalAccessRoot ConditionalAccess
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Models.ConditionalAccessRoot>("conditionalAccess"); }
            set { BackingStore?.Set("conditionalAccess", value); }
        }
#endif
        /// <summary>Represents custom extensions to authentication flows in Azure AD for workforce and customers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.CustomAuthenticationExtension>? CustomAuthenticationExtensions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.CustomAuthenticationExtension>?>("customAuthenticationExtensions"); }
            set { BackingStore?.Set("customAuthenticationExtensions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.CustomAuthenticationExtension> CustomAuthenticationExtensions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.CustomAuthenticationExtension>>("customAuthenticationExtensions"); }
            set { BackingStore?.Set("customAuthenticationExtensions", value); }
        }
#endif
        /// <summary>The identityProviders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.IdentityProviderBase>? IdentityProviders
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityProviderBase>?>("identityProviders"); }
            set { BackingStore?.Set("identityProviders", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.IdentityProviderBase> IdentityProviders
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityProviderBase>>("identityProviders"); }
            set { BackingStore?.Set("identityProviders", value); }
        }
#endif
        /// <summary>Represents entry point for identity userflow attributes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Models.IdentityUserFlowAttribute>? UserFlowAttributes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityUserFlowAttribute>?>("userFlowAttributes"); }
            set { BackingStore?.Set("userFlowAttributes", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Models.IdentityUserFlowAttribute> UserFlowAttributes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Models.IdentityUserFlowAttribute>>("userFlowAttributes"); }
            set { BackingStore?.Set("userFlowAttributes", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Models.IdentityContainer"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Models.IdentityContainer CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Models.IdentityContainer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "apiConnectors", n => { ApiConnectors = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityApiConnector>(global::Microsoft.Graph.Models.IdentityApiConnector.CreateFromDiscriminatorValue)?.AsList(); } },
                { "authenticationEventListeners", n => { AuthenticationEventListeners = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.AuthenticationEventListener>(global::Microsoft.Graph.Models.AuthenticationEventListener.CreateFromDiscriminatorValue)?.AsList(); } },
                { "authenticationEventsFlows", n => { AuthenticationEventsFlows = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.AuthenticationEventsFlow>(global::Microsoft.Graph.Models.AuthenticationEventsFlow.CreateFromDiscriminatorValue)?.AsList(); } },
                { "b2xUserFlows", n => { B2xUserFlows = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.B2xIdentityUserFlow>(global::Microsoft.Graph.Models.B2xIdentityUserFlow.CreateFromDiscriminatorValue)?.AsList(); } },
                { "conditionalAccess", n => { ConditionalAccess = n.GetObjectValue<global::Microsoft.Graph.Models.ConditionalAccessRoot>(global::Microsoft.Graph.Models.ConditionalAccessRoot.CreateFromDiscriminatorValue); } },
                { "customAuthenticationExtensions", n => { CustomAuthenticationExtensions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.CustomAuthenticationExtension>(global::Microsoft.Graph.Models.CustomAuthenticationExtension.CreateFromDiscriminatorValue)?.AsList(); } },
                { "identityProviders", n => { IdentityProviders = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityProviderBase>(global::Microsoft.Graph.Models.IdentityProviderBase.CreateFromDiscriminatorValue)?.AsList(); } },
                { "userFlowAttributes", n => { UserFlowAttributes = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityUserFlowAttribute>(global::Microsoft.Graph.Models.IdentityUserFlowAttribute.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityApiConnector>("apiConnectors", ApiConnectors);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.AuthenticationEventListener>("authenticationEventListeners", AuthenticationEventListeners);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.AuthenticationEventsFlow>("authenticationEventsFlows", AuthenticationEventsFlows);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.B2xIdentityUserFlow>("b2xUserFlows", B2xUserFlows);
            writer.WriteObjectValue<global::Microsoft.Graph.Models.ConditionalAccessRoot>("conditionalAccess", ConditionalAccess);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.CustomAuthenticationExtension>("customAuthenticationExtensions", CustomAuthenticationExtensions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityProviderBase>("identityProviders", IdentityProviders);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Models.IdentityUserFlowAttribute>("userFlowAttributes", UserFlowAttributes);
        }
    }
}
