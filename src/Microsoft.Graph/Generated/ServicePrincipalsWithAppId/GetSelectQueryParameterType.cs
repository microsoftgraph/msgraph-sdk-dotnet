// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Microsoft.Graph.ServicePrincipalsWithAppId {
    /// <summary>Provides operations to manage the collection of servicePrincipal entities.</summary>
    public enum GetSelectQueryParameterType {
        [EnumMember(Value = "id")]
        Id,
        [EnumMember(Value = "deletedDateTime")]
        DeletedDateTime,
        [EnumMember(Value = "accountEnabled")]
        AccountEnabled,
        [EnumMember(Value = "addIns")]
        AddIns,
        [EnumMember(Value = "alternativeNames")]
        AlternativeNames,
        [EnumMember(Value = "appDescription")]
        AppDescription,
        [EnumMember(Value = "appDisplayName")]
        AppDisplayName,
        [EnumMember(Value = "appId")]
        AppId,
        [EnumMember(Value = "applicationTemplateId")]
        ApplicationTemplateId,
        [EnumMember(Value = "appOwnerOrganizationId")]
        AppOwnerOrganizationId,
        [EnumMember(Value = "appRoleAssignmentRequired")]
        AppRoleAssignmentRequired,
        [EnumMember(Value = "appRoles")]
        AppRoles,
        [EnumMember(Value = "customSecurityAttributes")]
        CustomSecurityAttributes,
        [EnumMember(Value = "description")]
        Description,
        [EnumMember(Value = "disabledByMicrosoftStatus")]
        DisabledByMicrosoftStatus,
        [EnumMember(Value = "displayName")]
        DisplayName,
        [EnumMember(Value = "homepage")]
        Homepage,
        [EnumMember(Value = "info")]
        Info,
        [EnumMember(Value = "keyCredentials")]
        KeyCredentials,
        [EnumMember(Value = "loginUrl")]
        LoginUrl,
        [EnumMember(Value = "logoutUrl")]
        LogoutUrl,
        [EnumMember(Value = "notes")]
        Notes,
        [EnumMember(Value = "notificationEmailAddresses")]
        NotificationEmailAddresses,
        [EnumMember(Value = "oauth2PermissionScopes")]
        Oauth2PermissionScopes,
        [EnumMember(Value = "passwordCredentials")]
        PasswordCredentials,
        [EnumMember(Value = "preferredSingleSignOnMode")]
        PreferredSingleSignOnMode,
        [EnumMember(Value = "preferredTokenSigningKeyThumbprint")]
        PreferredTokenSigningKeyThumbprint,
        [EnumMember(Value = "replyUrls")]
        ReplyUrls,
        [EnumMember(Value = "resourceSpecificApplicationPermissions")]
        ResourceSpecificApplicationPermissions,
        [EnumMember(Value = "samlSingleSignOnSettings")]
        SamlSingleSignOnSettings,
        [EnumMember(Value = "servicePrincipalNames")]
        ServicePrincipalNames,
        [EnumMember(Value = "servicePrincipalType")]
        ServicePrincipalType,
        [EnumMember(Value = "signInAudience")]
        SignInAudience,
        [EnumMember(Value = "tags")]
        Tags,
        [EnumMember(Value = "tokenEncryptionKeyId")]
        TokenEncryptionKeyId,
        [EnumMember(Value = "verifiedPublisher")]
        VerifiedPublisher,
        [EnumMember(Value = "appManagementPolicies")]
        AppManagementPolicies,
        [EnumMember(Value = "appRoleAssignedTo")]
        AppRoleAssignedTo,
        [EnumMember(Value = "appRoleAssignments")]
        AppRoleAssignments,
        [EnumMember(Value = "claimsMappingPolicies")]
        ClaimsMappingPolicies,
        [EnumMember(Value = "createdObjects")]
        CreatedObjects,
        [EnumMember(Value = "delegatedPermissionClassifications")]
        DelegatedPermissionClassifications,
        [EnumMember(Value = "endpoints")]
        Endpoints,
        [EnumMember(Value = "federatedIdentityCredentials")]
        FederatedIdentityCredentials,
        [EnumMember(Value = "homeRealmDiscoveryPolicies")]
        HomeRealmDiscoveryPolicies,
        [EnumMember(Value = "memberOf")]
        MemberOf,
        [EnumMember(Value = "oauth2PermissionGrants")]
        Oauth2PermissionGrants,
        [EnumMember(Value = "ownedObjects")]
        OwnedObjects,
        [EnumMember(Value = "owners")]
        Owners,
        [EnumMember(Value = "remoteDesktopSecurityConfiguration")]
        RemoteDesktopSecurityConfiguration,
        [EnumMember(Value = "synchronization")]
        Synchronization,
        [EnumMember(Value = "tokenIssuancePolicies")]
        TokenIssuancePolicies,
        [EnumMember(Value = "tokenLifetimePolicies")]
        TokenLifetimePolicies,
        [EnumMember(Value = "transitiveMemberOf")]
        TransitiveMemberOf,
    }
}
