// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface IOnPremisesDirectorySynchronizationRequest.
    /// </summary>
    public partial interface IOnPremisesDirectorySynchronizationRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified OnPremisesDirectorySynchronization using POST.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToCreate">The OnPremisesDirectorySynchronization to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created OnPremisesDirectorySynchronization.</returns>
        System.Threading.Tasks.Task<OnPremisesDirectorySynchronization> CreateAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified OnPremisesDirectorySynchronization using POST and returns a <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToCreate">The OnPremisesDirectorySynchronization to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<OnPremisesDirectorySynchronization>> CreateResponseAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified OnPremisesDirectorySynchronization.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified OnPremisesDirectorySynchronization and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified OnPremisesDirectorySynchronization.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The OnPremisesDirectorySynchronization.</returns>
        System.Threading.Tasks.Task<OnPremisesDirectorySynchronization> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified OnPremisesDirectorySynchronization and returns a <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<OnPremisesDirectorySynchronization>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified OnPremisesDirectorySynchronization using PATCH.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToUpdate">The OnPremisesDirectorySynchronization to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated OnPremisesDirectorySynchronization.</returns>
        System.Threading.Tasks.Task<OnPremisesDirectorySynchronization> UpdateAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified OnPremisesDirectorySynchronization using PATCH and returns a <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToUpdate">The OnPremisesDirectorySynchronization to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<OnPremisesDirectorySynchronization>> UpdateResponseAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified OnPremisesDirectorySynchronization using PUT.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToUpdate">The OnPremisesDirectorySynchronization object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<OnPremisesDirectorySynchronization> PutAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified OnPremisesDirectorySynchronization using PUT and returns a <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> object.
        /// </summary>
        /// <param name="onPremisesDirectorySynchronizationToUpdate">The OnPremisesDirectorySynchronization object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{OnPremisesDirectorySynchronization}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<OnPremisesDirectorySynchronization>> PutResponseAsync(OnPremisesDirectorySynchronization onPremisesDirectorySynchronizationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IOnPremisesDirectorySynchronizationRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        IOnPremisesDirectorySynchronizationRequest Expand(Expression<Func<OnPremisesDirectorySynchronization, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IOnPremisesDirectorySynchronizationRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        IOnPremisesDirectorySynchronizationRequest Select(Expression<Func<OnPremisesDirectorySynchronization, object>> selectExpression);

    }
}
