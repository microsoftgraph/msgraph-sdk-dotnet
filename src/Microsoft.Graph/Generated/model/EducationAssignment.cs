// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Education Assignment.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<EducationAssignment>))]
    public partial class EducationAssignment : Entity
    {
    
        /// <summary>
        /// Gets or sets added student action.
        /// Optional field to control the assignment behavior for students who are added after the assignment is published. If not specified, defaults to none. Supported values are: none, assignIfOpen. For example, a teacher can use assignIfOpen to indicate that an assignment should be assigned to any new student who joins the class while the assignment is still open, and none to indicate that an assignment should not be assigned to new students.
        /// </summary>
        [JsonPropertyName("addedStudentAction")]
        public EducationAddedStudentAction? AddedStudentAction { get; set; }
    
        /// <summary>
        /// Gets or sets add to calendar action.
        /// Optional field to control the assignment behavior  for adding assignments to students' and teachers' calendars when the assignment is published. The possible values are: none, studentsAndPublisher, studentsAndTeamOwners, unknownFutureValue, and studentsOnly. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: studentsOnly. The default value is none.
        /// </summary>
        [JsonPropertyName("addToCalendarAction")]
        public EducationAddToCalendarOptions? AddToCalendarAction { get; set; }
    
        /// <summary>
        /// Gets or sets allow late submissions.
        /// Identifies whether students can submit after the due date. If this property isn't specified during create, it defaults to true.
        /// </summary>
        [JsonPropertyName("allowLateSubmissions")]
        public bool? AllowLateSubmissions { get; set; }
    
        /// <summary>
        /// Gets or sets allow students to add resources to submission.
        /// Identifies whether students can add their own resources to a submission or if they can only modify resources added by the teacher.
        /// </summary>
        [JsonPropertyName("allowStudentsToAddResourcesToSubmission")]
        public bool? AllowStudentsToAddResourcesToSubmission { get; set; }
    
        /// <summary>
        /// Gets or sets assign date time.
        /// The date when the assignment should become active.  If in the future, the assignment isn't shown to the student until this date.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("assignDateTime")]
        public DateTimeOffset? AssignDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets assigned date time.
        /// The moment that the assignment was published to students and the assignment shows up on the students timeline.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("assignedDateTime")]
        public DateTimeOffset? AssignedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets assign to.
        /// Which users, or whole class should receive a submission object once the assignment is published.
        /// </summary>
        [JsonPropertyName("assignTo")]
        public EducationAssignmentRecipient AssignTo { get; set; }
    
        /// <summary>
        /// Gets or sets class id.
        /// Class which this assignment belongs.
        /// </summary>
        [JsonPropertyName("classId")]
        public string ClassId { get; set; }
    
        /// <summary>
        /// Gets or sets close date time.
        /// Date when the assignment will be closed for submissions. This is an optional field that can be null if the assignment does not allowLateSubmissions or when the closeDateTime is the same as the dueDateTime. But if specified, then the closeDateTime must be greater than or equal to the dueDateTime. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("closeDateTime")]
        public DateTimeOffset? CloseDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created by.
        /// Who created the assignment.
        /// </summary>
        [JsonPropertyName("createdBy")]
        public IdentitySet CreatedBy { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// Moment when the assignment was created.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Name of the assignment.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets due date time.
        /// Date when the students assignment is due.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("dueDateTime")]
        public DateTimeOffset? DueDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets feedback resources folder url.
        /// Folder URL where all the feedback file resources for this assignment are stored.
        /// </summary>
        [JsonPropertyName("feedbackResourcesFolderUrl")]
        public string FeedbackResourcesFolderUrl { get; set; }
    
        /// <summary>
        /// Gets or sets grading.
        /// How the assignment will be graded.
        /// </summary>
        [JsonPropertyName("grading")]
        public EducationAssignmentGradeType Grading { get; set; }
    
        /// <summary>
        /// Gets or sets instructions.
        /// Instructions for the assignment.  This along with the display name tell the student what to do.
        /// </summary>
        [JsonPropertyName("instructions")]
        public EducationItemBody Instructions { get; set; }
    
        /// <summary>
        /// Gets or sets last modified by.
        /// Who last modified the assignment.
        /// </summary>
        [JsonPropertyName("lastModifiedBy")]
        public IdentitySet LastModifiedBy { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// Moment when the assignment was last modified.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets notification channel url.
        /// Optional field to specify the URL of the channel to post the assignment publish notification. If not specified or null, defaults to the General channel. This field only applies to assignments where the assignTo value is educationAssignmentClassRecipient. Updating the notificationChannelUrl isn't allowed after the assignment has been published.
        /// </summary>
        [JsonPropertyName("notificationChannelUrl")]
        public string NotificationChannelUrl { get; set; }
    
        /// <summary>
        /// Gets or sets resources folder url.
        /// Folder URL where all the file resources for this assignment are stored.
        /// </summary>
        [JsonPropertyName("resourcesFolderUrl")]
        public string ResourcesFolderUrl { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Status of the Assignment.  You can't PATCH this value.  Possible values are: draft, scheduled, published, assigned.
        /// </summary>
        [JsonPropertyName("status")]
        public EducationAssignmentStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets web url.
        /// The deep link URL for the given assignment.
        /// </summary>
        [JsonPropertyName("webUrl")]
        public string WebUrl { get; set; }
    
        /// <summary>
        /// Gets or sets categories.
        /// When set, enables users to easily find assignments of a given type.  Read-only. Nullable.
        /// </summary>
        [JsonPropertyName("categories")]
        public IEducationAssignmentCategoriesCollectionPage Categories { get; set; }

        /// <summary>
        /// Gets or sets categoriesNextLink.
        /// </summary>
        [JsonPropertyName("categories@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string CategoriesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets resources.
        /// Learning objects that are associated with this assignment.  Only teachers can modify this list. Nullable.
        /// </summary>
        [JsonPropertyName("resources")]
        public IEducationAssignmentResourcesCollectionPage Resources { get; set; }

        /// <summary>
        /// Gets or sets resourcesNextLink.
        /// </summary>
        [JsonPropertyName("resources@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ResourcesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets rubric.
        /// When set, the grading rubric attached to this assignment.
        /// </summary>
        [JsonPropertyName("rubric")]
        public EducationRubric Rubric { get; set; }
    
        /// <summary>
        /// Gets or sets submissions.
        /// Once published, there is a submission object for each student representing their work and grade.  Read-only. Nullable.
        /// </summary>
        [JsonPropertyName("submissions")]
        public IEducationAssignmentSubmissionsCollectionPage Submissions { get; set; }

        /// <summary>
        /// Gets or sets submissionsNextLink.
        /// </summary>
        [JsonPropertyName("submissions@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string SubmissionsNextLink { get; set; }
    
    }
}

