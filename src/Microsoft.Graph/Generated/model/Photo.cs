// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Photo.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<Photo>))]
    public partial class Photo
    {

        /// <summary>
        /// Gets or sets cameraMake.
        /// Camera manufacturer. Read-only.
        /// </summary>
        [JsonPropertyName("cameraMake")]
        public string CameraMake { get; set; }
    
        /// <summary>
        /// Gets or sets cameraModel.
        /// Camera model. Read-only.
        /// </summary>
        [JsonPropertyName("cameraModel")]
        public string CameraModel { get; set; }
    
        /// <summary>
        /// Gets or sets exposureDenominator.
        /// The denominator for the exposure time fraction from the camera. Read-only.
        /// </summary>
        [JsonPropertyName("exposureDenominator")]
        public double? ExposureDenominator { get; set; }
    
        /// <summary>
        /// Gets or sets exposureNumerator.
        /// The numerator for the exposure time fraction from the camera. Read-only.
        /// </summary>
        [JsonPropertyName("exposureNumerator")]
        public double? ExposureNumerator { get; set; }
    
        /// <summary>
        /// Gets or sets fNumber.
        /// The F-stop value from the camera. Read-only.
        /// </summary>
        [JsonPropertyName("fNumber")]
        public double? FNumber { get; set; }
    
        /// <summary>
        /// Gets or sets focalLength.
        /// The focal length from the camera. Read-only.
        /// </summary>
        [JsonPropertyName("focalLength")]
        public double? FocalLength { get; set; }
    
        /// <summary>
        /// Gets or sets iso.
        /// The ISO value from the camera. Read-only.
        /// </summary>
        [JsonPropertyName("iso")]
        public Int32? Iso { get; set; }
    
        /// <summary>
        /// Gets or sets orientation.
        /// The orientation value from the camera. Writable on OneDrive Personal.
        /// </summary>
        [JsonPropertyName("orientation")]
        public Int16? Orientation { get; set; }
    
        /// <summary>
        /// Gets or sets takenDateTime.
        /// Represents the date and time the photo was taken. Read-only.
        /// </summary>
        [JsonPropertyName("takenDateTime")]
        public DateTimeOffset? TakenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
