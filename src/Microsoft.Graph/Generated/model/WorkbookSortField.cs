// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type WorkbookSortField.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<WorkbookSortField>))]
    public partial class WorkbookSortField
    {

        /// <summary>
        /// Gets or sets ascending.
        /// Represents whether the sorting is done in an ascending fashion.
        /// </summary>
        [JsonPropertyName("ascending")]
        public bool? Ascending { get; set; }
    
        /// <summary>
        /// Gets or sets color.
        /// Represents the color that is the target of the condition if the sorting is on font or cell color.
        /// </summary>
        [JsonPropertyName("color")]
        public string Color { get; set; }
    
        /// <summary>
        /// Gets or sets dataOption.
        /// Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.
        /// </summary>
        [JsonPropertyName("dataOption")]
        public string DataOption { get; set; }
    
        /// <summary>
        /// Gets or sets icon.
        /// Represents the icon that is the target of the condition if the sorting is on the cell's icon.
        /// </summary>
        [JsonPropertyName("icon")]
        public WorkbookIcon Icon { get; set; }
    
        /// <summary>
        /// Gets or sets key.
        /// Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
        /// </summary>
        [JsonPropertyName("key")]
        public Int32? Key { get; set; }
    
        /// <summary>
        /// Gets or sets sortOn.
        /// Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.
        /// </summary>
        [JsonPropertyName("sortOn")]
        public string SortOn { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
