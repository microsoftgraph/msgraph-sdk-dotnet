// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Todo Task.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<TodoTask>))]
    public partial class TodoTask : Entity
    {
    
        /// <summary>
        /// Gets or sets body.
        /// The task body that typically contains information about the task.
        /// </summary>
        [JsonPropertyName("body")]
        public ItemBody Body { get; set; }
    
        /// <summary>
        /// Gets or sets body last modified date time.
        /// The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        /// </summary>
        [JsonPropertyName("bodyLastModifiedDateTime")]
        public DateTimeOffset? BodyLastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets categories.
        /// The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined.
        /// </summary>
        [JsonPropertyName("categories")]
        public IEnumerable<string> Categories { get; set; }
    
        /// <summary>
        /// Gets or sets completed date time.
        /// The date and time in the specified time zone that the task was finished.
        /// </summary>
        [JsonPropertyName("completedDateTime")]
        public DateTimeTimeZone CompletedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets due date time.
        /// The date and time in the specified time zone that the task is to be finished.
        /// </summary>
        [JsonPropertyName("dueDateTime")]
        public DateTimeTimeZone DueDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets has attachments.
        /// </summary>
        [JsonPropertyName("hasAttachments")]
        public bool? HasAttachments { get; set; }
    
        /// <summary>
        /// Gets or sets importance.
        /// The importance of the task. Possible values are: low, normal, high.
        /// </summary>
        [JsonPropertyName("importance")]
        public Importance? Importance { get; set; }
    
        /// <summary>
        /// Gets or sets is reminder on.
        /// Set to true if an alert is set to remind the user of the task.
        /// </summary>
        [JsonPropertyName("isReminderOn")]
        public bool? IsReminderOn { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets recurrence.
        /// The recurrence pattern for the task.
        /// </summary>
        [JsonPropertyName("recurrence")]
        public PatternedRecurrence Recurrence { get; set; }
    
        /// <summary>
        /// Gets or sets reminder date time.
        /// The date and time in the specified time zone for a reminder alert of the task to occur.
        /// </summary>
        [JsonPropertyName("reminderDateTime")]
        public DateTimeTimeZone ReminderDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets start date time.
        /// </summary>
        [JsonPropertyName("startDateTime")]
        public DateTimeTimeZone StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Indicates the state or progress of the task. Possible values are: notStarted, inProgress, completed, waitingOnOthers, deferred.
        /// </summary>
        [JsonPropertyName("status")]
        public TaskStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets title.
        /// A brief description of the task.
        /// </summary>
        [JsonPropertyName("title")]
        public string Title { get; set; }
    
        /// <summary>
        /// Gets or sets attachments.
        /// </summary>
        [JsonPropertyName("attachments")]
        public ITodoTaskAttachmentsCollectionPage Attachments { get; set; }

        /// <summary>
        /// Gets or sets attachmentsNextLink.
        /// </summary>
        [JsonPropertyName("attachments@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string AttachmentsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets attachment sessions.
        /// </summary>
        [JsonPropertyName("attachmentSessions")]
        public ITodoTaskAttachmentSessionsCollectionPage AttachmentSessions { get; set; }

        /// <summary>
        /// Gets or sets attachmentSessionsNextLink.
        /// </summary>
        [JsonPropertyName("attachmentSessions@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string AttachmentSessionsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets checklist items.
        /// A collection of checklistItems linked to a task.
        /// </summary>
        [JsonPropertyName("checklistItems")]
        public ITodoTaskChecklistItemsCollectionPage ChecklistItems { get; set; }

        /// <summary>
        /// Gets or sets checklistItemsNextLink.
        /// </summary>
        [JsonPropertyName("checklistItems@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ChecklistItemsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets extensions.
        /// The collection of open extensions defined for the task. Nullable.
        /// </summary>
        [JsonPropertyName("extensions")]
        public ITodoTaskExtensionsCollectionPage Extensions { get; set; }

        /// <summary>
        /// Gets or sets extensionsNextLink.
        /// </summary>
        [JsonPropertyName("extensions@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ExtensionsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets linked resources.
        /// A collection of resources linked to the task.
        /// </summary>
        [JsonPropertyName("linkedResources")]
        public ITodoTaskLinkedResourcesCollectionPage LinkedResources { get; set; }

        /// <summary>
        /// Gets or sets linkedResourcesNextLink.
        /// </summary>
        [JsonPropertyName("linkedResources@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string LinkedResourcesNextLink { get; set; }
    
    }
}

