// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type BookingCustomerInformation.
    /// </summary>
    public partial class BookingCustomerInformation : BookingCustomerInformationBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BookingCustomerInformation"/> class.
        /// </summary>
        public BookingCustomerInformation()
        {
            this.ODataType = "microsoft.graph.bookingCustomerInformation";
        }

        /// <summary>
        /// Gets or sets customerId.
        /// The ID of the bookingCustomer for this appointment. If no ID is specified when an appointment is created, then a new bookingCustomer object is created. Once set, you should consider the customerId immutable.
        /// </summary>
        [JsonPropertyName("customerId")]
        public string CustomerId { get; set; }
    
        /// <summary>
        /// Gets or sets customQuestionAnswers.
        /// It consists of the list of custom questions and answers given by the customer as part of the appointment
        /// </summary>
        [JsonPropertyName("customQuestionAnswers")]
        public IEnumerable<BookingQuestionAnswer> CustomQuestionAnswers { get; set; }
    
        /// <summary>
        /// Gets or sets emailAddress.
        /// The SMTP address of the bookingCustomer who is booking the appointment
        /// </summary>
        [JsonPropertyName("emailAddress")]
        public string EmailAddress { get; set; }
    
        /// <summary>
        /// Gets or sets location.
        /// Represents location information for the bookingCustomer who is booking the appointment.
        /// </summary>
        [JsonPropertyName("location")]
        public Location Location { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// The customer's name.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets notes.
        /// Notes from the customer associated with this appointment. You can get the value only when reading this bookingAppointment by its ID. You can set this property only when initially creating an appointment with a new customer. After that point, the value is computed from the customer represented by the customerId.
        /// </summary>
        [JsonPropertyName("notes")]
        public string Notes { get; set; }
    
        /// <summary>
        /// Gets or sets phone.
        /// The customer's phone number.
        /// </summary>
        [JsonPropertyName("phone")]
        public string Phone { get; set; }
    
        /// <summary>
        /// Gets or sets timeZone.
        /// The time zone of the customer. For a list of possible values, see dateTimeTimeZone.
        /// </summary>
        [JsonPropertyName("timeZone")]
        public string TimeZone { get; set; }
    
    }
}
