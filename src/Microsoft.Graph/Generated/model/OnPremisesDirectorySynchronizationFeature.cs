// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type OnPremisesDirectorySynchronizationFeature.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<OnPremisesDirectorySynchronizationFeature>))]
    public partial class OnPremisesDirectorySynchronizationFeature
    {

        /// <summary>
        /// Gets or sets blockCloudObjectTakeoverThroughHardMatchEnabled.
        /// </summary>
        [JsonPropertyName("blockCloudObjectTakeoverThroughHardMatchEnabled")]
        public bool? BlockCloudObjectTakeoverThroughHardMatchEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets blockSoftMatchEnabled.
        /// </summary>
        [JsonPropertyName("blockSoftMatchEnabled")]
        public bool? BlockSoftMatchEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets bypassDirSyncOverridesEnabled.
        /// </summary>
        [JsonPropertyName("bypassDirSyncOverridesEnabled")]
        public bool? BypassDirSyncOverridesEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets cloudPasswordPolicyForPasswordSyncedUsersEnabled.
        /// </summary>
        [JsonPropertyName("cloudPasswordPolicyForPasswordSyncedUsersEnabled")]
        public bool? CloudPasswordPolicyForPasswordSyncedUsersEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets concurrentCredentialUpdateEnabled.
        /// </summary>
        [JsonPropertyName("concurrentCredentialUpdateEnabled")]
        public bool? ConcurrentCredentialUpdateEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets concurrentOrgIdProvisioningEnabled.
        /// </summary>
        [JsonPropertyName("concurrentOrgIdProvisioningEnabled")]
        public bool? ConcurrentOrgIdProvisioningEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets deviceWritebackEnabled.
        /// </summary>
        [JsonPropertyName("deviceWritebackEnabled")]
        public bool? DeviceWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets directoryExtensionsEnabled.
        /// </summary>
        [JsonPropertyName("directoryExtensionsEnabled")]
        public bool? DirectoryExtensionsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets fopeConflictResolutionEnabled.
        /// </summary>
        [JsonPropertyName("fopeConflictResolutionEnabled")]
        public bool? FopeConflictResolutionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets groupWriteBackEnabled.
        /// </summary>
        [JsonPropertyName("groupWriteBackEnabled")]
        public bool? GroupWriteBackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets passwordSyncEnabled.
        /// </summary>
        [JsonPropertyName("passwordSyncEnabled")]
        public bool? PasswordSyncEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets passwordWritebackEnabled.
        /// </summary>
        [JsonPropertyName("passwordWritebackEnabled")]
        public bool? PasswordWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets quarantineUponProxyAddressesConflictEnabled.
        /// </summary>
        [JsonPropertyName("quarantineUponProxyAddressesConflictEnabled")]
        public bool? QuarantineUponProxyAddressesConflictEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets quarantineUponUpnConflictEnabled.
        /// </summary>
        [JsonPropertyName("quarantineUponUpnConflictEnabled")]
        public bool? QuarantineUponUpnConflictEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets softMatchOnUpnEnabled.
        /// </summary>
        [JsonPropertyName("softMatchOnUpnEnabled")]
        public bool? SoftMatchOnUpnEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets synchronizeUpnForManagedUsersEnabled.
        /// </summary>
        [JsonPropertyName("synchronizeUpnForManagedUsersEnabled")]
        public bool? SynchronizeUpnForManagedUsersEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets unifiedGroupWritebackEnabled.
        /// </summary>
        [JsonPropertyName("unifiedGroupWritebackEnabled")]
        public bool? UnifiedGroupWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets userForcePasswordChangeOnLogonEnabled.
        /// </summary>
        [JsonPropertyName("userForcePasswordChangeOnLogonEnabled")]
        public bool? UserForcePasswordChangeOnLogonEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets userWritebackEnabled.
        /// </summary>
        [JsonPropertyName("userWritebackEnabled")]
        public bool? UserWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
