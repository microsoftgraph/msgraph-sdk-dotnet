// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type OnPremisesDirectorySynchronizationFeature.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<OnPremisesDirectorySynchronizationFeature>))]
    public partial class OnPremisesDirectorySynchronizationFeature
    {

        /// <summary>
        /// Gets or sets blockCloudObjectTakeoverThroughHardMatchEnabled.
        /// Used to block cloud object takeover via source anchor hard match if enabled.
        /// </summary>
        [JsonPropertyName("blockCloudObjectTakeoverThroughHardMatchEnabled")]
        public bool? BlockCloudObjectTakeoverThroughHardMatchEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets blockSoftMatchEnabled.
        /// Use to block soft match for all objects if enabled for the  tenant. Customers are encouraged to enable this feature and keep it enabled until soft matching is required again for their tenancy. This flag should be enabled again after any soft matching has been completed and is no longer needed.
        /// </summary>
        [JsonPropertyName("blockSoftMatchEnabled")]
        public bool? BlockSoftMatchEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets bypassDirSyncOverridesEnabled.
        /// When true, persists the values of Mobile and OtherMobile in on-premises AD during sync cycles instead of values of MobilePhone or AlternateMobilePhones in Azure AD.
        /// </summary>
        [JsonPropertyName("bypassDirSyncOverridesEnabled")]
        public bool? BypassDirSyncOverridesEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets cloudPasswordPolicyForPasswordSyncedUsersEnabled.
        /// Used to indicate that cloud password policy applies to users whose passwords are synchronized from on-premises.
        /// </summary>
        [JsonPropertyName("cloudPasswordPolicyForPasswordSyncedUsersEnabled")]
        public bool? CloudPasswordPolicyForPasswordSyncedUsersEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets concurrentCredentialUpdateEnabled.
        /// Used to enable concurrent user credentials update in OrgId.
        /// </summary>
        [JsonPropertyName("concurrentCredentialUpdateEnabled")]
        public bool? ConcurrentCredentialUpdateEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets concurrentOrgIdProvisioningEnabled.
        /// Used to enable concurrent user creation in OrgId.
        /// </summary>
        [JsonPropertyName("concurrentOrgIdProvisioningEnabled")]
        public bool? ConcurrentOrgIdProvisioningEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets deviceWritebackEnabled.
        /// Used to indicate that device write-back is enabled.
        /// </summary>
        [JsonPropertyName("deviceWritebackEnabled")]
        public bool? DeviceWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets directoryExtensionsEnabled.
        /// Used to indicate that directory extensions are being synced from on-premises AD to Azure AD.
        /// </summary>
        [JsonPropertyName("directoryExtensionsEnabled")]
        public bool? DirectoryExtensionsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets fopeConflictResolutionEnabled.
        /// Used to indicate that for a Microsoft Forefront Online Protection for Exchange (FOPE) migrated tenant, the conflicting proxy address should be migrated over.
        /// </summary>
        [JsonPropertyName("fopeConflictResolutionEnabled")]
        public bool? FopeConflictResolutionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets groupWriteBackEnabled.
        /// Used to enable object-level group writeback feature for additional group types.
        /// </summary>
        [JsonPropertyName("groupWriteBackEnabled")]
        public bool? GroupWriteBackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets passwordSyncEnabled.
        /// Used to indicate on-premise password synchronization is enabled.
        /// </summary>
        [JsonPropertyName("passwordSyncEnabled")]
        public bool? PasswordSyncEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets passwordWritebackEnabled.
        /// Used to indicate that writeback of password resets from Azure AD to on-premises AD is enabled.
        /// </summary>
        [JsonPropertyName("passwordWritebackEnabled")]
        public bool? PasswordWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets quarantineUponProxyAddressesConflictEnabled.
        /// Used to indicate that we should quarantine objects with conflicting proxy address.
        /// </summary>
        [JsonPropertyName("quarantineUponProxyAddressesConflictEnabled")]
        public bool? QuarantineUponProxyAddressesConflictEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets quarantineUponUpnConflictEnabled.
        /// Used to indicate that we should quarantine objects conflicting with duplicate userPrincipalName.
        /// </summary>
        [JsonPropertyName("quarantineUponUpnConflictEnabled")]
        public bool? QuarantineUponUpnConflictEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets softMatchOnUpnEnabled.
        /// Used to indicate that we should soft match objects based on userPrincipalName.
        /// </summary>
        [JsonPropertyName("softMatchOnUpnEnabled")]
        public bool? SoftMatchOnUpnEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets synchronizeUpnForManagedUsersEnabled.
        /// Used to indicate that we should synchronize userPrincipalName objects for managed users with licenses.
        /// </summary>
        [JsonPropertyName("synchronizeUpnForManagedUsersEnabled")]
        public bool? SynchronizeUpnForManagedUsersEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets unifiedGroupWritebackEnabled.
        /// Used to indicate that Microsoft 365 Group write-back is enabled.
        /// </summary>
        [JsonPropertyName("unifiedGroupWritebackEnabled")]
        public bool? UnifiedGroupWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets userForcePasswordChangeOnLogonEnabled.
        /// Used to indicate that feature to force password change for a user on logon is enabled while synchronizing on-premise credentials.
        /// </summary>
        [JsonPropertyName("userForcePasswordChangeOnLogonEnabled")]
        public bool? UserForcePasswordChangeOnLogonEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets userWritebackEnabled.
        /// Used to indicate that user writeback is enabled.
        /// </summary>
        [JsonPropertyName("userWritebackEnabled")]
        public bool? UserWritebackEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
