// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type OnenotePatchContentCommand.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<OnenotePatchContentCommand>))]
    public partial class OnenotePatchContentCommand
    {

        /// <summary>
        /// Gets or sets action.
        /// The action to perform on the target element. The possible values are: replace, append, delete, insert, or prepend.
        /// </summary>
        [JsonPropertyName("action")]
        public OnenotePatchActionType? Action { get; set; }
    
        /// <summary>
        /// Gets or sets content.
        /// A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a 'Commands' part.
        /// </summary>
        [JsonPropertyName("content")]
        public string Content { get; set; }
    
        /// <summary>
        /// Gets or sets position.
        /// The location to add the supplied content, relative to the target element. The possible values are: after (default) or before.
        /// </summary>
        [JsonPropertyName("position")]
        public OnenotePatchInsertPosition? Position { get; set; }
    
        /// <summary>
        /// Gets or sets target.
        /// The element to update. Must be the #&amp;lt;data-id&amp;gt; or the generated &amp;lt;id&amp;gt; of the element, or the body or title keyword.
        /// </summary>
        [JsonPropertyName("target")]
        public string Target { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
