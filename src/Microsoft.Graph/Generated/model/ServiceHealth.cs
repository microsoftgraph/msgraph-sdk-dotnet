// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Service Health.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<ServiceHealth>))]
    public partial class ServiceHealth : Entity
    {
    
        /// <summary>
        /// Gets or sets service.
        /// The service name. Use the list healthOverviews operation to get exact string names for services subscribed by the tenant.
        /// </summary>
        [JsonPropertyName("service")]
        public string Service { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Show the overral service health status. Possible values are: serviceOperational, investigating, restoringService, verifyingService, serviceRestored, postIncidentReviewPublished, serviceDegradation, serviceInterruption, extendedRecovery, falsePositive, investigationSuspended, resolved, mitigatedExternal, mitigated, resolvedExternal, confirmed, reported, unknownFutureValue. For more details, see serviceHealthStatus values.
        /// </summary>
        [JsonPropertyName("status")]
        public ServiceHealthStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets issues.
        /// A collection of issues that happened on the service, with detailed information for each issue.
        /// </summary>
        [JsonPropertyName("issues")]
        public IServiceHealthIssuesCollectionPage Issues { get; set; }

        /// <summary>
        /// Gets or sets issuesNextLink.
        /// </summary>
        [JsonPropertyName("issues@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string IssuesNextLink { get; set; }
    
    }
}

