// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Microsoft.Graph.Organization.Item {
    /// <summary>Provides operations to manage the collection of organization entities.</summary>
    public enum GetSelectQueryParameterType {
        [EnumMember(Value = "id")]
        Id,
        [EnumMember(Value = "deletedDateTime")]
        DeletedDateTime,
        [EnumMember(Value = "assignedPlans")]
        AssignedPlans,
        [EnumMember(Value = "businessPhones")]
        BusinessPhones,
        [EnumMember(Value = "city")]
        City,
        [EnumMember(Value = "country")]
        Country,
        [EnumMember(Value = "countryLetterCode")]
        CountryLetterCode,
        [EnumMember(Value = "createdDateTime")]
        CreatedDateTime,
        [EnumMember(Value = "defaultUsageLocation")]
        DefaultUsageLocation,
        [EnumMember(Value = "displayName")]
        DisplayName,
        [EnumMember(Value = "marketingNotificationEmails")]
        MarketingNotificationEmails,
        [EnumMember(Value = "mobileDeviceManagementAuthority")]
        MobileDeviceManagementAuthority,
        [EnumMember(Value = "onPremisesLastSyncDateTime")]
        OnPremisesLastSyncDateTime,
        [EnumMember(Value = "onPremisesSyncEnabled")]
        OnPremisesSyncEnabled,
        [EnumMember(Value = "partnerTenantType")]
        PartnerTenantType,
        [EnumMember(Value = "postalCode")]
        PostalCode,
        [EnumMember(Value = "preferredLanguage")]
        PreferredLanguage,
        [EnumMember(Value = "privacyProfile")]
        PrivacyProfile,
        [EnumMember(Value = "provisionedPlans")]
        ProvisionedPlans,
        [EnumMember(Value = "securityComplianceNotificationMails")]
        SecurityComplianceNotificationMails,
        [EnumMember(Value = "securityComplianceNotificationPhones")]
        SecurityComplianceNotificationPhones,
        [EnumMember(Value = "state")]
        State,
        [EnumMember(Value = "street")]
        Street,
        [EnumMember(Value = "technicalNotificationMails")]
        TechnicalNotificationMails,
        [EnumMember(Value = "tenantType")]
        TenantType,
        [EnumMember(Value = "verifiedDomains")]
        VerifiedDomains,
        [EnumMember(Value = "branding")]
        Branding,
        [EnumMember(Value = "certificateBasedAuthConfiguration")]
        CertificateBasedAuthConfiguration,
        [EnumMember(Value = "extensions")]
        Extensions,
    }
}
