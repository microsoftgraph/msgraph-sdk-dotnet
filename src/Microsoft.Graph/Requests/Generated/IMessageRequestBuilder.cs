// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The interface IMessageRequestBuilder.
    /// </summary>
    public partial interface IMessageRequestBuilder : IOutlookItemRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new IMessageRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new IMessageRequest Request(IEnumerable<Option> options);
        
        /// <summary>
        /// Gets the request builder for Attachments.
        /// </summary>
        /// <returns>The <see cref="IMessageAttachmentsCollectionRequestBuilder"/>.</returns>
        IMessageAttachmentsCollectionRequestBuilder Attachments { get; }
        
        /// <summary>
        /// Gets the request builder for MessageCopy.
        /// </summary>
        /// <returns>The <see cref="IMessageCopyRequestBuilder"/>.</returns>
        IMessageCopyRequestBuilder Copy(
            string destinationId = null);

        /// <summary>
        /// Gets the request builder for MessageMove.
        /// </summary>
        /// <returns>The <see cref="IMessageMoveRequestBuilder"/>.</returns>
        IMessageMoveRequestBuilder Move(
            string destinationId = null);

        /// <summary>
        /// Gets the request builder for MessageCreateReply.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateReplyRequestBuilder"/>.</returns>
        IMessageCreateReplyRequestBuilder CreateReply();

        /// <summary>
        /// Gets the request builder for MessageCreateReplyAll.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateReplyAllRequestBuilder"/>.</returns>
        IMessageCreateReplyAllRequestBuilder CreateReplyAll();

        /// <summary>
        /// Gets the request builder for MessageCreateForward.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateForwardRequestBuilder"/>.</returns>
        IMessageCreateForwardRequestBuilder CreateForward();

        /// <summary>
        /// Gets the request builder for MessageReply.
        /// </summary>
        /// <returns>The <see cref="IMessageReplyRequestBuilder"/>.</returns>
        IMessageReplyRequestBuilder Reply(
            string comment = null);

        /// <summary>
        /// Gets the request builder for MessageReplyAll.
        /// </summary>
        /// <returns>The <see cref="IMessageReplyAllRequestBuilder"/>.</returns>
        IMessageReplyAllRequestBuilder ReplyAll(
            string comment = null);

        /// <summary>
        /// Gets the request builder for MessageForward.
        /// </summary>
        /// <returns>The <see cref="IMessageForwardRequestBuilder"/>.</returns>
        IMessageForwardRequestBuilder Forward(
            string comment = null,
            IEnumerable<Recipient> toRecipients = null);

        /// <summary>
        /// Gets the request builder for MessageSend.
        /// </summary>
        /// <returns>The <see cref="IMessageSendRequestBuilder"/>.</returns>
        IMessageSendRequestBuilder Send();
    
    }
}
