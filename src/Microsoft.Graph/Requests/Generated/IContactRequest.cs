// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The interface IContactRequest.
    /// </summary>
    public partial interface IContactRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified Contact using PUT.
        /// </summary>
        /// <param name="contactToCreate">The Contact to create.</param>
        /// <returns>The created Contact.</returns>
        Task<Contact> CreateAsync(Contact contactToCreate);        /// <summary>
        /// Creates the specified Contact using PUT.
        /// </summary>
        /// <param name="contactToCreate">The Contact to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created Contact.</returns>
        Task<Contact> CreateAsync(Contact contactToCreate, CancellationToken cancellationToken);

        /// <summary>
        /// Deletes the specified Contact.
        /// </summary>
        /// <returns>The task to await.</returns>
        Task DeleteAsync();

        /// <summary>
        /// Deletes the specified Contact.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        Task DeleteAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Gets the specified Contact.
        /// </summary>
        /// <returns>The Contact.</returns>
        Task<Contact> GetAsync();

        /// <summary>
        /// Gets the specified Contact.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The Contact.</returns>
        Task<Contact> GetAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Updates the specified Contact using PATCH.
        /// </summary>
        /// <param name="contactToUpdate">The Contact to update.</param>
        /// <returns>The updated Contact.</returns>
        Task<Contact> UpdateAsync(Contact contactToUpdate);

        /// <summary>
        /// Updates the specified Contact using PATCH.
        /// </summary>
        /// <param name="contactToUpdate">The Contact to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The updated Contact.</returns>
        Task<Contact> UpdateAsync(Contact contactToUpdate, CancellationToken cancellationToken);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IContactRequest Expand(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IContactRequest Select(string value);
    }
}
