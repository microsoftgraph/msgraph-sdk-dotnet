// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The interface IMailFolderRequest.
    /// </summary>
    public partial interface IMailFolderRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified MailFolder using PUT.
        /// </summary>
        /// <param name="mailFolderToCreate">The MailFolder to create.</param>
        /// <returns>The created MailFolder.</returns>
        Task<MailFolder> CreateAsync(MailFolder mailFolderToCreate);        /// <summary>
        /// Creates the specified MailFolder using PUT.
        /// </summary>
        /// <param name="mailFolderToCreate">The MailFolder to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created MailFolder.</returns>
        Task<MailFolder> CreateAsync(MailFolder mailFolderToCreate, CancellationToken cancellationToken);

        /// <summary>
        /// Deletes the specified MailFolder.
        /// </summary>
        /// <returns>The task to await.</returns>
        Task DeleteAsync();

        /// <summary>
        /// Deletes the specified MailFolder.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        Task DeleteAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Gets the specified MailFolder.
        /// </summary>
        /// <returns>The MailFolder.</returns>
        Task<MailFolder> GetAsync();

        /// <summary>
        /// Gets the specified MailFolder.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The MailFolder.</returns>
        Task<MailFolder> GetAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Updates the specified MailFolder using PATCH.
        /// </summary>
        /// <param name="mailFolderToUpdate">The MailFolder to update.</param>
        /// <returns>The updated MailFolder.</returns>
        Task<MailFolder> UpdateAsync(MailFolder mailFolderToUpdate);

        /// <summary>
        /// Updates the specified MailFolder using PATCH.
        /// </summary>
        /// <param name="mailFolderToUpdate">The MailFolder to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The updated MailFolder.</returns>
        Task<MailFolder> UpdateAsync(MailFolder mailFolderToUpdate, CancellationToken cancellationToken);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IMailFolderRequest Expand(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IMailFolderRequest Select(string value);
    }
}
