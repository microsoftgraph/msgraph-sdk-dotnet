// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    
    using Microsoft.Graph.Core;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Organization.
    /// </summary>
    [DataContract]
    public partial class Organization : DirectoryObject
    {
    
        /// <summary>
        /// Gets or sets assigned plans.
        /// </summary>
        [DataMember(Name = "assignedPlans", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<AssignedPlan> AssignedPlans { get; set; }
    
        /// <summary>
        /// Gets or sets business phones.
        /// </summary>
        [DataMember(Name = "businessPhones", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> BusinessPhones { get; set; }
    
        /// <summary>
        /// Gets or sets city.
        /// </summary>
        [DataMember(Name = "city", EmitDefaultValue = false, IsRequired = false)]
        public string City { get; set; }
    
        /// <summary>
        /// Gets or sets country.
        /// </summary>
        [DataMember(Name = "country", EmitDefaultValue = false, IsRequired = false)]
        public string Country { get; set; }
    
        /// <summary>
        /// Gets or sets country letter code.
        /// </summary>
        [DataMember(Name = "countryLetterCode", EmitDefaultValue = false, IsRequired = false)]
        public string CountryLetterCode { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false, IsRequired = false)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets marketing notification emails.
        /// </summary>
        [DataMember(Name = "marketingNotificationEmails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> MarketingNotificationEmails { get; set; }
    
        /// <summary>
        /// Gets or sets on premises last sync date time.
        /// </summary>
        [DataMember(Name = "onPremisesLastSyncDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? OnPremisesLastSyncDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets on premises sync enabled.
        /// </summary>
        [DataMember(Name = "onPremisesSyncEnabled", EmitDefaultValue = false, IsRequired = false)]
        public bool? OnPremisesSyncEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets postal code.
        /// </summary>
        [DataMember(Name = "postalCode", EmitDefaultValue = false, IsRequired = false)]
        public string PostalCode { get; set; }
    
        /// <summary>
        /// Gets or sets preferred language.
        /// </summary>
        [DataMember(Name = "preferredLanguage", EmitDefaultValue = false, IsRequired = false)]
        public string PreferredLanguage { get; set; }
    
        /// <summary>
        /// Gets or sets provisioned plans.
        /// </summary>
        [DataMember(Name = "provisionedPlans", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<ProvisionedPlan> ProvisionedPlans { get; set; }
    
        /// <summary>
        /// Gets or sets security compliance notification mails.
        /// </summary>
        [DataMember(Name = "securityComplianceNotificationMails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> SecurityComplianceNotificationMails { get; set; }
    
        /// <summary>
        /// Gets or sets security compliance notification phones.
        /// </summary>
        [DataMember(Name = "securityComplianceNotificationPhones", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> SecurityComplianceNotificationPhones { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false, IsRequired = false)]
        public string State { get; set; }
    
        /// <summary>
        /// Gets or sets street.
        /// </summary>
        [DataMember(Name = "street", EmitDefaultValue = false, IsRequired = false)]
        public string Street { get; set; }
    
        /// <summary>
        /// Gets or sets technical notification mails.
        /// </summary>
        [DataMember(Name = "technicalNotificationMails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> TechnicalNotificationMails { get; set; }
    
        /// <summary>
        /// Gets or sets verified domains.
        /// </summary>
        [DataMember(Name = "verifiedDomains", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<VerifiedDomain> VerifiedDomains { get; set; }
    
    }
}

