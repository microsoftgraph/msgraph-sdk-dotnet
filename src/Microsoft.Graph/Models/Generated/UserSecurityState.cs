// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type UserSecurityState.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class UserSecurityState
    {

        /// <summary>
        /// Gets or sets aadUserId.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "aadUserId", Required = Newtonsoft.Json.Required.Default)]
        public string AadUserId { get; set; }
    
        /// <summary>
        /// Gets or sets accountName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "accountName", Required = Newtonsoft.Json.Required.Default)]
        public string AccountName { get; set; }
    
        /// <summary>
        /// Gets or sets domainName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "domainName", Required = Newtonsoft.Json.Required.Default)]
        public string DomainName { get; set; }
    
        /// <summary>
        /// Gets or sets emailRole.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "emailRole", Required = Newtonsoft.Json.Required.Default)]
        public EmailRole? EmailRole { get; set; }
    
        /// <summary>
        /// Gets or sets isVpn.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isVpn", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsVpn { get; set; }
    
        /// <summary>
        /// Gets or sets logonDateTime.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logonDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LogonDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets logonId.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logonId", Required = Newtonsoft.Json.Required.Default)]
        public string LogonId { get; set; }
    
        /// <summary>
        /// Gets or sets logonIp.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logonIp", Required = Newtonsoft.Json.Required.Default)]
        public string LogonIp { get; set; }
    
        /// <summary>
        /// Gets or sets logonLocation.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logonLocation", Required = Newtonsoft.Json.Required.Default)]
        public string LogonLocation { get; set; }
    
        /// <summary>
        /// Gets or sets logonType.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logonType", Required = Newtonsoft.Json.Required.Default)]
        public LogonType? LogonType { get; set; }
    
        /// <summary>
        /// Gets or sets onPremisesSecurityIdentifier.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "onPremisesSecurityIdentifier", Required = Newtonsoft.Json.Required.Default)]
        public string OnPremisesSecurityIdentifier { get; set; }
    
        /// <summary>
        /// Gets or sets riskScore.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "riskScore", Required = Newtonsoft.Json.Required.Default)]
        public string RiskScore { get; set; }
    
        /// <summary>
        /// Gets or sets userAccountType.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userAccountType", Required = Newtonsoft.Json.Required.Default)]
        public UserAccountSecurityType? UserAccountType { get; set; }
    
        /// <summary>
        /// Gets or sets userPrincipalName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userPrincipalName", Required = Newtonsoft.Json.Required.Default)]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
