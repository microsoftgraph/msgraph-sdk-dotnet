// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type MailTips.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class MailTips
    {

        /// <summary>
        /// Gets or sets emailAddress.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "emailAddress", Required = Newtonsoft.Json.Required.Default)]
        public EmailAddress EmailAddress { get; set; }
    
        /// <summary>
        /// Gets or sets automaticReplies.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "automaticReplies", Required = Newtonsoft.Json.Required.Default)]
        public AutomaticRepliesMailTips AutomaticReplies { get; set; }
    
        /// <summary>
        /// Gets or sets mailboxFull.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mailboxFull", Required = Newtonsoft.Json.Required.Default)]
        public bool? MailboxFull { get; set; }
    
        /// <summary>
        /// Gets or sets customMailTip.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "customMailTip", Required = Newtonsoft.Json.Required.Default)]
        public string CustomMailTip { get; set; }
    
        /// <summary>
        /// Gets or sets externalMemberCount.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "externalMemberCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? ExternalMemberCount { get; set; }
    
        /// <summary>
        /// Gets or sets totalMemberCount.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "totalMemberCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? TotalMemberCount { get; set; }
    
        /// <summary>
        /// Gets or sets deliveryRestricted.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deliveryRestricted", Required = Newtonsoft.Json.Required.Default)]
        public bool? DeliveryRestricted { get; set; }
    
        /// <summary>
        /// Gets or sets isModerated.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isModerated", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsModerated { get; set; }
    
        /// <summary>
        /// Gets or sets recipientScope.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recipientScope", Required = Newtonsoft.Json.Required.Default)]
        public RecipientScopeType? RecipientScope { get; set; }
    
        /// <summary>
        /// Gets or sets recipientSuggestions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recipientSuggestions", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Recipient> RecipientSuggestions { get; set; }
    
        /// <summary>
        /// Gets or sets maxMessageSize.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maxMessageSize", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaxMessageSize { get; set; }
    
        /// <summary>
        /// Gets or sets error.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "error", Required = Newtonsoft.Json.Required.Default)]
        public MailTipsError Error { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
